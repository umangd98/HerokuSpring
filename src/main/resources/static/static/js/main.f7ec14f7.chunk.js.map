{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/Projectitem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","SecurityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","SecurityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","async","axios","post","push","type","payload","response","data","Projectitem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","onChange","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_props","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decode","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7ec14f7.chunk.js","sourcesContent":["import axios from 'axios';\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post('/api/project', project);\n    history.push('/dashboard');\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get('/api/project/all');\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push('/dashboard');\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (window.confirm('are you sure? This will delete project and its data')) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const GET_PROJECT = 'GET_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\nexport const GET_PROJECTS = 'GET_PROJECTS';\n\n//Types for backlog actions\n\nexport const GET_BACKLOG = 'GET_BACKLOG';\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK';\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteProject } from '../../actions/projectActions';\n\nclass Projectitem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board pr-3\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update pr-3\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete pr-3\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectitem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\nexport default connect(null, { deleteProject })(Projectitem);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nexport default function CreateProjectButton() {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport Projectitem from './Project/Projectitem';\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport { connect } from 'react-redux';\nimport { getProjects } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <Projectitem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  project: state.project\n});\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from 'axios';\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\nexport default setJWTToken;\n","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setJWTToken from '../SecurityUtils/setJWTToken';\nimport jwt_decode from 'jwt-decode';\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post('/api/users/register', newUser);\n    history.push('/login');\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post('/api/users/login', LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    //store the token in local storage\n    localStorage.setItem('jwtToken', token);\n    //set our token in header ***\n    setJWTToken(token);\n    // decode token on react\n    const decoded = jwt_decode(token);\n    // dispatch to our security Reducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/securityActions';\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = '/';\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\"></i>\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"/\">\n            Personal Project Management Tool\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../actions/projectActions';\nimport classnames from 'classnames';\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: '',\n      projectIdentifier: '',\n      description: '',\n      start_date: '',\n      end_date: '',\n      errors: {}\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    // console.log(newProject);\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames('form-control form-control-lg ', {\n                        'is-invalid': errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange.bind(this)}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange.bind(this)}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange.bind(this)}\n                    ></textarea>\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS } from '../actions/types';\nimport { GET_PROJECT, DELETE_PROJECT } from '../actions/types';\n// import { act } from '@testing-library/react';\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from '../actions/types';\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from '../actions/types';\nconst initialState = {\n  user: {},\n  validToken: false\n};\nconst booleanActionPayload = payload => {\n  return payload ? true : false;\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport projectReducer from './projectReducer';\nimport backlogReducer from './backlogReducer';\nimport securityReducer from './securityReducer';\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes('Chrome') && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from 'react';\nimport { getProject, createProject } from '../../actions/projectActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: '',\n      projectName: '',\n      projectIdentifier: '',\n      description: '',\n      start_date: '',\n      end_date: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.projectIdentifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    disabled\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deleteProjectTask } from '../../../actions/backlogActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n    if (project_task.priority === 1) {\n      priorityClass = 'bg-danger text-light';\n      priorityString = 'HIGH';\n    }\n    if (project_task.priority === 3) {\n      priorityClass = 'bg-info text-light';\n      priorityString = 'LOW';\n    }\n    if (project_task.priority === 2) {\n      priorityClass = 'bg-warning text-light';\n      priorityString = 'MEDIUM';\n    }\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority:{priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n            className=\"btn btn-danger ml-4\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from 'axios';\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from './types';\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push('/dashboard');\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone.`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport ProjectTask from './ProjectTask/ProjectTask';\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_props } = this.props;\n    const tasks = project_tasks_props.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === 'TO_DO') {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === 'IN_PROGRESS') {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === 'DONE') {\n        doneItems.push(tasks[i]);\n      }\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              //insert task here\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n\n            {\n              //  <!-- SAMPLE PROJECT TASK STARTS HERE -->\n              // <!-- SAMPLE PROJECT TASK ENDS HERE -->\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n            {\n              //   <!-- SAMPLE PROJECT TASK STARTS HERE -->\n              // <!-- SAMPLE PROJECT TASK ENDS HERE -->\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Backlog from './Backlog';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getBacklog } from '../../actions/backlogActions';\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n    let BoardContent;\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Task on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_props={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { addProjectTask } from '../../../actions/backlogActions';\nimport PropTypes from 'prop-types';\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n    this.state = {\n      summary: '',\n      acceptanceCriteria: '',\n      status: '',\n      priority: 0,\n      dueDate: '',\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport {\n  getProjectTask,\n  updateProjectTask\n} from '../../../actions/backlogActions';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: '',\n      projectSequence: '',\n      summary: '',\n      acceptanceCriteria: '',\n      status: '',\n      priority: '',\n      dueDate: '',\n      projectIdentifier: '',\n      create_At: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{' '}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from 'react';\nimport { createNewUser } from '../../actions/securityActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      fullName: '',\n      password: '',\n      confirmPassword: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { login } from '../../actions/securityActions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push('/dashboard');\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"login\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h1 className=\"display-4 text-center\">Log In</h1>\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.username\n                      })}\n                      placeholder=\"Email Address\"\n                      name=\"username\"\n                      value={this.state.username}\n                      onChange={this.onChange}\n                    />\n                    {errors.username && (\n                      <div className=\"invalid-feedback\">{errors.username}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password\n                      })}\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      onChange={this.onChange}\n                    />\n                    {errors.password && (\n                      <div className=\"invalid-feedback\">{errors.password}</div>\n                    )}\n                  </div>\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-info btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTask/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTask/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from 'jwt-decode';\nimport setJWTToken from './SecurityUtils/setJWTToken';\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\nimport SecuredRoute from './SecurityUtils/SecureRoute';\nconst jwtToken = localStorage.jwtToken;\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decode = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decode\n  });\n  const currentTime = Date.now() / 1000;\n  if (decode.exp < currentTime) {\n    //handle logout\n    store.dispatch(logout());\n    window.location.href = '/';\n  }\n}\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //Public Routes\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            //Private Routes\n          }\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}